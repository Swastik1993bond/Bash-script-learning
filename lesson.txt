1. Given two integers, X and Y , identify whether X>Y or X<Y  or X+Y .

Output Format ==> Exactly one of the following lines:
- X is less than Y
- X is greater than Y
- X is equal to Y

Input Format
Two lines containing one integer each ( and , respectively).
No Constraints


#!/bin/bash
#echo "input X"
read X
#echo "input Y"
read Y
if [ $X -gt $Y ]
then
    echo "X is greater than Y"
elif [ $X -lt $Y ]
then 
    echo "X is less than Y"
else
    echo "X is equal to Y"
fi

#######################################################################
2. Read in one character from STDIN.
If the character is 'Y' or 'y' display "YES".
If the character is 'N' or 'n' display "NO".
No other character will be provided as input.

Output Format ==> echo YES or NO to STDOUT.

#!/bin/bash
read cha
if [ $cha == "y" ] || [ $cha == "Y" ]
then 
    echo "YES"
elif [ $cha == "n" ] || [ $cha == "N" ]
then 
    echo "NO"
fi
#######################################################################
3. Given three integers (, , and ) representing the three sides of a triangle, identify whether the triangle is scalene, isosceles, or equilateral.

If all three sides are equal, output EQUILATERAL.
Otherwise, if any two sides are equal, output ISOSCELES.
Otherwise, output SCALENE.

Conditions: The sum of any two sides will be greater than the third/ sides will be non-zero

Output Format ==> One word: either "SCALENE" or "EQUILATERAL" or "ISOSCELES" (quotation marks excluded).

#!/bin/bash
read X
read Y
read Z
# checking conditions if the sides are non zero and sum of two is greater than the rest

if [ $(($X+$Y)) -gt $Z ] && [ $X -ne 0 ] && [ $Y -ne 0 ] && [ $Z -ne 0 ]
then
#this was expalined in the video
    if [ $X -eq $Y ] && [ $Y -eq $Z ]
        then 
                echo "EQUILATERAL"
    elif [ $X -eq $Y ] && [ $Y -ne $Z ] || [ $Y -eq $Z ] && [ $X -ne $Y ]
        then 
            echo "ISOSCELES"
    else 
            echo "SCALENE"
    fi
else 
    echo "Invalid Input"
fi
#######################################################################

4. Use a for loop to display the natural numbers from 1 to 50 .
#!/bin/bash
for i in {1..50}
    do
    echo $i
    done
